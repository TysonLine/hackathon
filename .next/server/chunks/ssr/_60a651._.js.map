{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/anshnandwani/Desktop/Projects/uOttaHack7/hackathon/src/app/components/uploadResume.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport pdfToText from 'react-pdftotext';\n\nconst UploadResume = () => {\n  const [file, setFile] = useState<File | null>(null);\n\n  // Actual Pdf Text to be parsed\n  const [text, setText] = useState<string | null>(null);\n\n  // If Pdf is selected or not\n  const [status, setStatus] = useState<string | null>(null);\n\n  // Whenever file is uploaded, we set the current file to file\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files && event.target.files[0]) {\n      const uploadedFile = event.target.files[0];\n      setFile(uploadedFile);\n\n      pdfToText(uploadedFile)\n        .then(text => {\n          console.log(text);\n          setText(text);\n        })\n        .catch(error => {\n          console.error(\"Failed to extract text from pdf\", error);\n          setStatus(\"Failed to extract text from pdf\");\n        });\n    }\n  };\n\n  return (\n    <div>\n      <input type=\"file\" accept=\"application/pdf\" onChange={handleFileChange} />\n      {file && <p>Uploaded file: {file.name}</p>}\n      {text && <pre>{text}</pre>}\n      {status && <p>{status}</p>}\n    </div>\n  );\n};\n\nexport default UploadResume;"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEA,MAAM,eAAe;IACnB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAE9C,+BAA+B;IAC/B,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAEhD,4BAA4B;IAC5B,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAEpD,6DAA6D;IAC7D,MAAM,mBAAmB,CAAC;QACxB,IAAI,MAAM,MAAM,CAAC,KAAK,IAAI,MAAM,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE;YAC/C,MAAM,eAAe,MAAM,MAAM,CAAC,KAAK,CAAC,EAAE;YAC1C,QAAQ;YAER,CAAA,GAAA,mJAAA,CAAA,UAAS,AAAD,EAAE,cACP,IAAI,CAAC,CAAA;gBACJ,QAAQ,GAAG,CAAC;gBACZ,QAAQ;YACV,GACC,KAAK,CAAC,CAAA;gBACL,QAAQ,KAAK,CAAC,mCAAmC;gBACjD,UAAU;YACZ;QACJ;IACF;IAEA,qBACE,8OAAC;;0BACC,8OAAC;gBAAM,MAAK;gBAAO,QAAO;gBAAkB,UAAU;;;;;;YACrD,sBAAQ,8OAAC;;oBAAE;oBAAgB,KAAK,IAAI;;;;;;;YACpC,sBAAQ,8OAAC;0BAAK;;;;;;YACd,wBAAU,8OAAC;0BAAG;;;;;;;;;;;;AAGrB;uCAEe"}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["file:///Users/anshnandwani/Desktop/Projects/uOttaHack7/hackathon/src/app/page.tsx"],"sourcesContent":["import Image from \"next/image\";\nimport UploadResume from \"./components/uploadResume\";\n\nexport default function Home() {\n  return (\n    <div className=\"grid grid-rows-[20px_1fr_20px] items-center justify-items-center min-h-screen p-8 pb-20 gap-16 sm:p-20 font-[family-name:var(--font-geist-sans)]\">\n      <main className=\"flex flex-col gap-8 row-start-2 items-center sm:items-start\">\n        \n      </main>\n      \n      <UploadResume />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAK,WAAU;;;;;;0BAIhB,8OAAC,yIAAA,CAAA,UAAY;;;;;;;;;;;AAGnB"}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}